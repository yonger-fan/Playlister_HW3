{"ast":null,"code":"var _jsxFileName = \"/Users/yongerfan/Desktop/playlister_hw3/Playlister_HW3/client/src/components/EditToolbar.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { GlobalStoreContext } from '../store';\nimport { useHistory } from 'react-router-dom';\n/*\n    This toolbar is a functional React component that\n    manages the undo/redo/close buttons.\n    \n    @author McKilla Gorilla\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditToolbar() {\n  _s();\n\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  const history = useHistory();\n  let enabledButtonClass = \"playlister-button\";\n\n  if (store.currentList == null) {\n    enabledButtonClass = \"playlister-button-disabled\";\n  }\n\n  if (store.listNameActive) {\n    enabledButtonClass = \"playlister-button-disabled\";\n  }\n\n  if (store.markListDeleteId != 0) {\n    enabledButtonClass = \"playlister-button-disabled\";\n  }\n\n  function handleUndo() {\n    store.undo();\n  }\n\n  function handleRedo() {\n    store.redo();\n  }\n\n  function handleClose() {\n    history.push(\"/\");\n    store.closeCurrentList();\n  }\n\n  function handleAddsong() {\n    store.addAddSongTransaction(); //store.addSong();\n  }\n\n  let editStatus = false;\n\n  if (store.listNameEditActive) {\n    editStatus = true;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    id: \"edit-toolbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"add-song-button\",\n      disabled: editStatus,\n      value: \"+\",\n      className: enabledButtonClass,\n      onClick: handleAddsong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"undo-button\",\n      disabled: editStatus,\n      value: \"\\u27F2\",\n      className: enabledButtonClass,\n      onClick: handleUndo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"redo-button\",\n      disabled: editStatus,\n      value: \"\\u27F3\",\n      className: enabledButtonClass,\n      onClick: handleRedo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"close-button\",\n      disabled: editStatus,\n      value: \"\\u2715\",\n      className: enabledButtonClass,\n      onClick: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditToolbar, \"3pru+SYrs14w+1LSVfrX0yDmdFE=\", false, function () {\n  return [useHistory];\n});\n\n_c = EditToolbar;\nexport default EditToolbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditToolbar\");","map":{"version":3,"names":["useContext","GlobalStoreContext","useHistory","EditToolbar","store","history","enabledButtonClass","currentList","listNameActive","markListDeleteId","handleUndo","undo","handleRedo","redo","handleClose","push","closeCurrentList","handleAddsong","addAddSongTransaction","editStatus","listNameEditActive"],"sources":["/Users/yongerfan/Desktop/playlister_hw3/Playlister_HW3/client/src/components/EditToolbar.js"],"sourcesContent":["import { useContext } from 'react'\nimport { GlobalStoreContext } from '../store'\nimport { useHistory } from 'react-router-dom'\n/*\n    This toolbar is a functional React component that\n    manages the undo/redo/close buttons.\n    \n    @author McKilla Gorilla\n*/\nfunction EditToolbar() {\n    const { store } = useContext(GlobalStoreContext);\n    const history = useHistory();\n\n    let enabledButtonClass = \"playlister-button\";\n\n    if (store.currentList == null) {\n        enabledButtonClass = \"playlister-button-disabled\";\n    }\n\n    if (store.listNameActive) {\n        enabledButtonClass = \"playlister-button-disabled\";\n    }\n\n    if (store.markListDeleteId != 0) {\n        enabledButtonClass = \"playlister-button-disabled\";\n    }\n\n\n    function handleUndo() {\n        store.undo();\n    }\n    function handleRedo() {\n        store.redo();\n    }\n    function handleClose() {\n        history.push(\"/\");\n        store.closeCurrentList();\n    }\n\n    function handleAddsong() {\n        store.addAddSongTransaction();\n        //store.addSong();\n    }\n    let editStatus = false;\n    if (store.listNameEditActive) {\n        editStatus = true;\n    }\n    return (\n        <span id=\"edit-toolbar\">\n            <input\n                type=\"button\"\n                id='add-song-button'\n                disabled={editStatus}\n                value=\"+\"\n                className={enabledButtonClass}\n                onClick={handleAddsong}\n            />\n            <input\n                type=\"button\"\n                id='undo-button'\n                disabled={editStatus}\n                value=\"⟲\"\n                className={enabledButtonClass}\n                onClick={handleUndo}\n            />\n            <input\n                type=\"button\"\n                id='redo-button'\n                disabled={editStatus}\n                value=\"⟳\"\n                className={enabledButtonClass}\n                onClick={handleRedo}\n            />\n            <input\n                type=\"button\"\n                id='close-button'\n                disabled={editStatus}\n                value=\"&#x2715;\"\n                className={enabledButtonClass}\n                onClick={handleClose}\n            />\n        </span>);\n}\n\nexport default EditToolbar;"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,kBAAT,QAAmC,UAAnC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,SAASC,WAAT,GAAuB;EAAA;;EACnB,MAAM;IAAEC;EAAF,IAAYJ,UAAU,CAACC,kBAAD,CAA5B;EACA,MAAMI,OAAO,GAAGH,UAAU,EAA1B;EAEA,IAAII,kBAAkB,GAAG,mBAAzB;;EAEA,IAAIF,KAAK,CAACG,WAAN,IAAqB,IAAzB,EAA+B;IAC3BD,kBAAkB,GAAG,4BAArB;EACH;;EAED,IAAIF,KAAK,CAACI,cAAV,EAA0B;IACtBF,kBAAkB,GAAG,4BAArB;EACH;;EAED,IAAIF,KAAK,CAACK,gBAAN,IAA0B,CAA9B,EAAiC;IAC7BH,kBAAkB,GAAG,4BAArB;EACH;;EAGD,SAASI,UAAT,GAAsB;IAClBN,KAAK,CAACO,IAAN;EACH;;EACD,SAASC,UAAT,GAAsB;IAClBR,KAAK,CAACS,IAAN;EACH;;EACD,SAASC,WAAT,GAAuB;IACnBT,OAAO,CAACU,IAAR,CAAa,GAAb;IACAX,KAAK,CAACY,gBAAN;EACH;;EAED,SAASC,aAAT,GAAyB;IACrBb,KAAK,CAACc,qBAAN,GADqB,CAErB;EACH;;EACD,IAAIC,UAAU,GAAG,KAAjB;;EACA,IAAIf,KAAK,CAACgB,kBAAV,EAA8B;IAC1BD,UAAU,GAAG,IAAb;EACH;;EACD,oBACI;IAAM,EAAE,EAAC,cAAT;IAAA,wBACI;MACI,IAAI,EAAC,QADT;MAEI,EAAE,EAAC,iBAFP;MAGI,QAAQ,EAAEA,UAHd;MAII,KAAK,EAAC,GAJV;MAKI,SAAS,EAAEb,kBALf;MAMI,OAAO,EAAEW;IANb;MAAA;MAAA;MAAA;IAAA,QADJ,eASI;MACI,IAAI,EAAC,QADT;MAEI,EAAE,EAAC,aAFP;MAGI,QAAQ,EAAEE,UAHd;MAII,KAAK,EAAC,QAJV;MAKI,SAAS,EAAEb,kBALf;MAMI,OAAO,EAAEI;IANb;MAAA;MAAA;MAAA;IAAA,QATJ,eAiBI;MACI,IAAI,EAAC,QADT;MAEI,EAAE,EAAC,aAFP;MAGI,QAAQ,EAAES,UAHd;MAII,KAAK,EAAC,QAJV;MAKI,SAAS,EAAEb,kBALf;MAMI,OAAO,EAAEM;IANb;MAAA;MAAA;MAAA;IAAA,QAjBJ,eAyBI;MACI,IAAI,EAAC,QADT;MAEI,EAAE,EAAC,cAFP;MAGI,QAAQ,EAAEO,UAHd;MAII,KAAK,EAAC,QAJV;MAKI,SAAS,EAAEb,kBALf;MAMI,OAAO,EAAEQ;IANb;MAAA;MAAA;MAAA;IAAA,QAzBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAmCH;;GAzEQX,W;UAEWD,U;;;KAFXC,W;AA2ET,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}