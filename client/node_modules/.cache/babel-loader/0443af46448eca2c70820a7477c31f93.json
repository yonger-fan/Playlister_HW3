{"ast":null,"code":"var _jsxFileName = \"/Users/yongerfan/Desktop/playlister_hw3/Playlister_HW3/client/src/components/ListCard.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { GlobalStoreContext } from '../store';\n/*\n    This is a card in our list of playlists. It lets select\n    a list for editing and it has controls for changing its \n    name or deleting it.\n    \n    @author McKilla Gorilla\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListCard(props) {\n  _s();\n\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  const [editActive, setEditActive] = useState(false);\n  const [text, setText] = useState(\"\");\n  store.history = useHistory();\n  const {\n    idNamePair,\n    selected\n  } = props;\n\n  function handleLoadList(event) {\n    if (!event.target.disabled) {\n      let _id = event.target.id;\n      if (_id.indexOf('list-card-text-') >= 0) _id = (\"\" + _id).substring(\"list-card-text-\".length); // CHANGE THE CURRENT LIST\n\n      store.setCurrentList(_id);\n    }\n  }\n\n  function handleDeleteList(event) {\n    event.stopPropagation();\n    let id = event.target.id.substring(\"delete-list-\".length);\n    store.deleteList(id);\n  }\n\n  function handleToggleEdit(event) {\n    event.stopPropagation();\n    toggleEdit();\n  }\n\n  function toggleEdit() {\n    let newActive = !editActive;\n\n    if (newActive) {\n      store.setlistNameActive();\n    }\n\n    setEditActive(newActive);\n  }\n\n  function handleKeyPress(event) {\n    if (event.code === \"Enter\") {\n      let id = event.target.id.substring(\"list-\".length);\n      store.changeListName(id, text);\n      toggleEdit();\n    }\n  }\n\n  function handleUpdateText(event) {\n    setText(event.target.value);\n  }\n\n  let selectClass = \"unselected-list-card\";\n\n  if (selected) {\n    selectClass = \"selected-list-card\";\n  }\n\n  let cardStatus = false;\n\n  if (store.isListNameEditActive) {\n    cardStatus = true;\n  }\n\n  let cardElement = /*#__PURE__*/_jsxDEV(\"div\", {\n    id: idNamePair._id,\n    onClick: handleLoadList,\n    className: 'list-card ' + selectClass,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"list-card-text-\" + idNamePair._id,\n      className: \"list-card-text\",\n      children: idNamePair.name\n    }, \"span-\" + idNamePair._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      disabled: cardStatus,\n      type: \"button\",\n      id: \"delete-list-\" + idNamePair._id,\n      className: \"list-card-button\",\n      onClick: handleDeleteList,\n      value: \"\\u2715\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      disabled: cardStatus,\n      type: \"button\",\n      id: \"edit-list-\" + idNamePair._id,\n      className: \"list-card-button\",\n      onClick: handleToggleEdit,\n      value: \"\\u270E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, idNamePair._id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n\n  if (editActive) {\n    cardElement = /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"list-\" + idNamePair._id,\n      className: \"list-card\",\n      type: \"text\",\n      onKeyPress: handleKeyPress,\n      onChange: handleUpdateText,\n      defaultValue: idNamePair.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this);\n  }\n\n  return cardElement;\n}\n\n_s(ListCard, \"fZ+dbcmrsEXJMahJiSuaIEnEUfk=\", false, function () {\n  return [useHistory];\n});\n\n_c = ListCard;\nexport default ListCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListCard\");","map":{"version":3,"names":["useContext","useState","useHistory","GlobalStoreContext","ListCard","props","store","editActive","setEditActive","text","setText","history","idNamePair","selected","handleLoadList","event","target","disabled","_id","id","indexOf","substring","length","setCurrentList","handleDeleteList","stopPropagation","deleteList","handleToggleEdit","toggleEdit","newActive","setlistNameActive","handleKeyPress","code","changeListName","handleUpdateText","value","selectClass","cardStatus","isListNameEditActive","cardElement","name"],"sources":["/Users/yongerfan/Desktop/playlister_hw3/Playlister_HW3/client/src/components/ListCard.js"],"sourcesContent":["import { useContext, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { GlobalStoreContext } from '../store'\n/*\n    This is a card in our list of playlists. It lets select\n    a list for editing and it has controls for changing its \n    name or deleting it.\n    \n    @author McKilla Gorilla\n*/\nfunction ListCard(props) {\n    const { store } = useContext(GlobalStoreContext);\n    const [ editActive, setEditActive ] = useState(false);\n    const [ text, setText ] = useState(\"\");\n    store.history = useHistory();\n    const { idNamePair, selected } = props;\n\n    function handleLoadList(event) {\n        if (!event.target.disabled) {\n            let _id = event.target.id;\n            if (_id.indexOf('list-card-text-') >= 0)\n                _id = (\"\" + _id).substring(\"list-card-text-\".length);\n\n            // CHANGE THE CURRENT LIST\n            store.setCurrentList(_id);\n        }\n    }\n\n    function handleDeleteList(event){\n        event.stopPropagation();\n        let id = event.target.id.substring(\"delete-list-\".length);\n        store.deleteList(id);\n    }\n\n    function handleToggleEdit(event) {\n        event.stopPropagation();\n        toggleEdit();\n    }\n\n    function toggleEdit() {\n        let newActive = !editActive;\n        if (newActive) {\n            store.setlistNameActive();\n        }\n        setEditActive(newActive);\n    }\n\n    function handleKeyPress(event) {\n        if (event.code === \"Enter\") {\n            let id = event.target.id.substring(\"list-\".length);\n            store.changeListName(id, text);\n            toggleEdit();\n        }\n    }\n    function handleUpdateText(event) {\n        setText(event.target.value );\n    }\n\n    let selectClass = \"unselected-list-card\";\n    if (selected) {\n        selectClass = \"selected-list-card\";\n    }\n    let cardStatus = false;\n    if (store.isListNameEditActive) {\n        cardStatus = true;\n    }\n    let cardElement =\n        <div\n            id={idNamePair._id}\n            key={idNamePair._id}\n            onClick={handleLoadList}\n            className={'list-card ' + selectClass}>\n            <span\n                id={\"list-card-text-\" + idNamePair._id}\n                key={\"span-\" + idNamePair._id}\n                className=\"list-card-text\">\n                {idNamePair.name}\n            </span>\n            <input\n                disabled={cardStatus}\n                type=\"button\"\n                id={\"delete-list-\" + idNamePair._id}\n                className=\"list-card-button\"\n                onClick={handleDeleteList}\n                value={\"\\u2715\"}\n            />\n            <input\n                disabled={cardStatus}\n                type=\"button\"\n                id={\"edit-list-\" + idNamePair._id}\n                className=\"list-card-button\"\n                onClick={handleToggleEdit}\n                value={\"\\u270E\"}\n            />\n        </div>;\n\n    if (editActive) {\n        cardElement =\n            <input\n                id={\"list-\" + idNamePair._id}\n                className='list-card'\n                type='text'\n                onKeyPress={handleKeyPress}\n                onChange={handleUpdateText}\n                defaultValue={idNamePair.name}\n            />;\n    }\n    return (\n        cardElement\n    );\n}\n\nexport default ListCard;"],"mappings":"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"},"metadata":{},"sourceType":"module"}