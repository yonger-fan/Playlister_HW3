{"ast":null,"code":"import jsTPS_Transaction from \"../common/jsTPS.js\";\n/**\n * UpdateSong_Transaction\n * \n * This class represents a transaction that updates a song\n * in the playlist. It will be managed by the transaction stack.\n * \n * @author McKilla Gorilla\n * @author ?\n */\n\nexport default class UpdateSong_Transaction extends jsTPS_Transaction {\n  constructor(store, preTitle, preArtist, preSongId, newTitle, newArtist, newSongId, index) {\n    super();\n    this.store = store;\n    this.preTitle = preTitle;\n    this.preArtist = preArtist;\n    this.preSongId = preSongId;\n    this.newTitle = newTitle;\n    this.newArtist = newArtist;\n    this.newSongId = newSongId;\n    this.index = index;\n  }\n\n  doTransaction() {\n    this.store.edit(this.newTitle, this.newArtist, this.newSongId, this.index);\n  }\n\n  undoTransaction() {\n    this.store.edit(this.preTitle, this.preArtist, this.preSongId, this.index);\n  }\n\n}","map":{"version":3,"names":["jsTPS_Transaction","UpdateSong_Transaction","constructor","store","preTitle","preArtist","preSongId","newTitle","newArtist","newSongId","index","doTransaction","edit","undoTransaction"],"sources":["/Users/yongerfan/Desktop/playlister_hw3/Playlister_HW3/client/src/transactions/UpdataSong_Transaction.js"],"sourcesContent":["import jsTPS_Transaction from \"../common/jsTPS.js\"\n\n/**\n * UpdateSong_Transaction\n * \n * This class represents a transaction that updates a song\n * in the playlist. It will be managed by the transaction stack.\n * \n * @author McKilla Gorilla\n * @author ?\n */\nexport default class UpdateSong_Transaction extends jsTPS_Transaction {\n    constructor(store, preTitle,preArtist,preSongId,newTitle,newArtist,newSongId,index) {\n        super();\n        this.store = store;\n        this.preTitle = preTitle;\n        this.preArtist = preArtist;\n        this.preSongId = preSongId;\n        this.newTitle = newTitle;\n        this.newArtist = newArtist;\n        this.newSongId = newSongId;\n        this.index = index;\n    }\n\n    doTransaction() {\n        this.store.edit(this.newTitle,this.newArtist,this.newSongId,this.index);\n    }\n    \n    undoTransaction() {\n        this.store.edit(this.preTitle,this.preArtist,this.preSongId,this.index);\n    }\n}"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,oBAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,sBAAN,SAAqCD,iBAArC,CAAuD;EAClEE,WAAW,CAACC,KAAD,EAAQC,QAAR,EAAiBC,SAAjB,EAA2BC,SAA3B,EAAqCC,QAArC,EAA8CC,SAA9C,EAAwDC,SAAxD,EAAkEC,KAAlE,EAAyE;IAChF;IACA,KAAKP,KAAL,GAAaA,KAAb;IACA,KAAKC,QAAL,GAAgBA,QAAhB;IACA,KAAKC,SAAL,GAAiBA,SAAjB;IACA,KAAKC,SAAL,GAAiBA,SAAjB;IACA,KAAKC,QAAL,GAAgBA,QAAhB;IACA,KAAKC,SAAL,GAAiBA,SAAjB;IACA,KAAKC,SAAL,GAAiBA,SAAjB;IACA,KAAKC,KAAL,GAAaA,KAAb;EACH;;EAEDC,aAAa,GAAG;IACZ,KAAKR,KAAL,CAAWS,IAAX,CAAgB,KAAKL,QAArB,EAA8B,KAAKC,SAAnC,EAA6C,KAAKC,SAAlD,EAA4D,KAAKC,KAAjE;EACH;;EAEDG,eAAe,GAAG;IACd,KAAKV,KAAL,CAAWS,IAAX,CAAgB,KAAKR,QAArB,EAA8B,KAAKC,SAAnC,EAA6C,KAAKC,SAAlD,EAA4D,KAAKI,KAAjE;EACH;;AAnBiE"},"metadata":{},"sourceType":"module"}